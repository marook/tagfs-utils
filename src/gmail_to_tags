#!/usr/bin/env python
#
# Copyright 2010 Markus Pielmeier
#
# This file is part of tagfs utils.
#
# tagfs utils is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# tagfs utils is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tagfs utils.  If not, see <http://www.gnu.org/licenses/>.
#

import optparse

from tag_utils import csv_import as ci

parsers = [ci.PassThroughParser(),] * 67
    # Name
    # Given Name
    # Additional Name
    # Family Name
    # Yomi Name
    # Given Name Yomi
    # Additional Name Yomi
    # Family Name Yomi
    # Name Prefix
    # Name Suffix
    # Initials
    # Nickname
    # Short Name
    # Maiden Name
    # Birthday
    # Gender
    # Location
    # Billing Information
    # Directory Server
    # Mileage
    # Occupation
    # Hobby
    # Sensitivity
    # Priority
    # Subject
    # Notes
    # Group Membership
    # E-mail 1 - Type
    # E-mail 1 - Value
    # E-mail 2 - Type
    # E-mail 2 - Value
    # E-mail 3 - Type
    # E-mail 3 - Value
    # E-mail 4 - Type
    # E-mail 4 - Value
    # Phone 1 - Type
    # Phone 1 - Value
    # Phone 2 - Type
    # Phone 2 - Value
    # Phone 3 - Type
    # Phone 3 - Value
    # Address 1 - Type
    # Address 1 - Formatted
    # Address 1 - Street
    # Address 1 - City
    # Address 1 - PO Box
    # Address 1 - Region
    # Address 1 - Postal Code
    # Address 1 - Country
    # Address 1 - Extended Address
    # Address 2 - Type
    # Address 2 - Formatted
    # Address 2 - Street
    # Address 2 - City
    # Address 2 - PO Box
    # Address 2 - Region
    # Address 2 - Postal Code
    # Address 2 - Country
    # Address 2 - Extended Address
    # Organization 1 - Type
    # Organization 1 - Name
    # Organization 1 - Yomi Name
    # Organization 1 - Title
    # Organization 1 - Department
    # Organization 1 - Symbol
    # Organization 1 - Location
    # Organization 1 - Job Description
#]

formatters = [ci.PassThroughFormatter(context) for context in ['Name', 'Given Name', 'Additional Name', 'Family Name', 'Yomi Name', 'Given Name Yomi', 'Additional Name Yomi', 'Family Name Yomi', 'Name Prefix', 'Name Suffix', 'Initials', 'Nickname', 'Short Name', 'Maiden Name', 'Birthday', 'Gender', 'Location', 'Billing Information', 'Directory Server', 'Mileage', 'Occupation', 'Hobby', 'Sensitivity', 'Priority', 'Subject', 'Notes', 'Group Membership', 'E-mail 1 - Type', 'E-mail 1 - Value', 'E-mail 2 - Type', 'E-mail 2 - Value', 'E-mail 3 - Type', 'E-mail 3 - Value', 'E-mail 4 - Type', 'E-mail 4 - Value', 'Phone 1 - Type', 'Phone 1 - Value', 'Phone 2 - Type', 'Phone 2 - Value', 'Phone 3 - Type', 'Phone 3 - Value', 'Address 1 - Type', 'Address 1 - Formatted', 'Address 1 - Street', 'Address 1 - City', 'Address 1 - PO Box', 'Address 1 - Region', 'Address 1 - Postal Code', 'Address 1 - Country', 'Address 1 - Extended Address', 'Address 2 - Type', 'Address 2 - Formatted', 'Address 2 - Street', 'Address 2 - City', 'Address 2 - PO Box', 'Address 2 - Region', 'Address 2 - Postal Code', 'Address 2 - Country', 'Address 2 - Extended Address', 'Organization 1 - Type', 'Organization 1 - Name', 'Organization 1 - Yomi Name', 'Organization 1 - Title', 'Organization 1 - Department', 'Organization 1 - Symbol', 'Organization 1 - Location', 'Organization 1 - Job Description']]

class ContactsMerger(ci.AbstractSheetToTagsMerger):
    
    def __init__(self, contactsDir):
        super(ContactsMerger, self).__init__()

        self.colFormatters = formatters
        self.rootTagDir = contactsDir

    def getItemDirName(self, row, sheet):
        return row[0]

    def postProcessItem(self, item, row, sheet):
        item.appendTagging('src', 'gmail_to_tags')

def parseArgs():
    usage = 'usage: %prog [options] contacts_csv'
    p = optparse.OptionParser(usage = usage)
    p.add_option('-o',
                 '--output',
                 dest = 'outputDir',
                 help = 'contacts directory',
                 metavar = 'DIR',
                 default = '.')

    return p.parse_args()

def main():
    (options, args) = parseArgs()

    if len(args) == 0:
        parser.print_help()

        return 1

    contactsCsvFileName = args[0]

    sheet = ci.Sheet()

    sheet.parseCSV(contactsCsvFileName, parsers, csvStartRow = 1, delimiter = ',')

    merger = ContactsMerger(options.outputDir)
    merger.mergeToTags(sheet)

    return 0

if __name__ == '__main__':
    import sys

    sys.exit(main())
