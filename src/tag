#!/usr/bin/env python
#
# Copyright 2010 Markus Pielmeier
#
# This file is part of tagfs utils.
#
# tagfs utils is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# tagfs utils is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tagfs utils.  If not, see <http://www.gnu.org/licenses/>.
#

import optparse
import re

class Comment(Entry):

    LINE_MATCHER = re.compile('^[\s]*$')
    
    def __init__(self, line):
        self.line = line

class Tagging(object):
    
    def __init__(self, context, value):
        self.context = context
        self.value = value

    @property
    def line(self):
        s = ''

        if self.context:
            s = s + self.context + ': '

        s = s + self.value

        return s

class Item(object):

    def __init__(self, itemFileName):
        self.itemFileName = itemFileName
        self.entries = []

        with open(itemFileName) as f:
            for line in f:
                if Comment.LINE_MATCHER.match(line):
                    entry = Comment(line)
                else:
                    i = line.find(':')

                    if i == -1:
                        context = None
                        value = line.strip()
                    else:
                        context = line[0:i - 1].strip()
                        value = line[i + 1, line.length].strip()

                    entry = Tagging(context, value)

                self.entries.append(entry)

    def findTaggingsByContext(self, context):
        pass

    def appendTagging(self, t):
        pass

def main():
    parser = optparse.OptionParser()
    
    (options, args) = parser.parse_args()

    # TODO
    pass

if __name__ == '__main__':
    main()
